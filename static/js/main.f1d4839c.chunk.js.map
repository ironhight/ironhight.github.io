{"version":3,"sources":["components/home/home.component.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Home","className","id","cursor","show","target","rel","href","role","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f1d4839c.chunk.js","sourcesContent":["import Typist from 'react-typist';\r\n\r\nimport './home.styles.scss';\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t<div id=\"stars\" />\r\n\t\t\t<div className=\"text-center container\">\r\n\t\t\t\t<h1 className=\"display-1\">Nam Nguyen Hoai</h1>\r\n\t\t\t\t<Typist className=\"lead typist\" cursor={{ show: false }}>\r\n\t\t\t\t\tHi! I'm a software engineer with a self-starter's mindset.\r\n\t\t\t\t</Typist>\r\n\t\t\t\t<div className=\"p-5\">\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\taria-label=\"My github\"\r\n\t\t\t\t\t\thref=\"https://github.com/ironhight\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fab fa-github fa-3x socialicons\" />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\taria-label=\"My facebk\"\r\n\t\t\t\t\t\thref=\"https://github.com/ironhight\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fab fa-facebook fa-3x socialicons\" />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\taria-label=\"My instag\"\r\n\t\t\t\t\t\thref=\"https://github.com/ironhight\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fab fa-instagram fa-3x socialicons\" />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\taria-label=\"My linked\"\r\n\t\t\t\t\t\thref=\"https://github.com/ironhight\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fab fa-linkedin fa-3x socialicons\" />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\taria-label=\"My twittr\"\r\n\t\t\t\t\t\thref=\"https://twitter.com/Nam03995427\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fab fa-twitter fa-3x socialicons\" />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName=\"btn btn-outline-light btn-lg\"\r\n\t\t\t\t\trole=\"button\"\r\n\t\t\t\t\taria-label=\"Learn more about me\"\r\n\t\t\t\t\thref=\"https://github.com/ironhight\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\tMore about me\r\n\t\t\t\t</a>\r\n\t\t\t\t<div className=\"footer\">\r\n\t\t\t\t\t<i className=\"fas fa-code\" /> with <i className=\"fas fa-heart\" />\r\n\t\t\t\t\t{''} by\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\tclassName=\"badge badge-dark socialicons\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\thref=\"https://github.com/ironhight\"\r\n\t\t\t\t\t\taria-label=\"My GitHub\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tIronhight\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import Home from './components/home/home.component';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Home />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}